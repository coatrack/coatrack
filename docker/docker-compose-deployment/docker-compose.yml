services:

  coatrack-database:
    image: postgres:${POSTGRES_VERSION}
    container_name: ${DATABASE_CONTAINER_NAME}
    volumes:
      - ${DATABASE_VOLUME}:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  coatrack-config-server:
    image: coatrack/coatrack-config-server:${COATRACK_VERSION}
    container_name: ${CONFIG_SERVER_CONTAINER_NAME}
    volumes:
      - ${GATEWAY_CONFIG_FILES_VOLUME}:${GATEWAY_CONFIG_FILES_FOLDER}:ro
    depends_on:
      - ${DATABASE_CONTAINER_NAME}
    ports:
      - 8998:8998
    entrypoint: [ "sh", "-c", "sleep 5 && java -Djava.security.egd=file:/dev/./urandom -cp \
      /app/resources:/app/classes:/app/libs/* eu.coatrack.admin.server.ConfigServiceApplication \
      --ygg.admin.config.access.user.name=${CONFIG_SERVER_USERNAME} \
      --ygg.admin.config.access.user.password=${CONFIG_SERVER_PASSWORD} \
      --spring.profiles.active=native \
      --spring.cloud.config.server.native.searchLocations=file://${GATEWAY_CONFIG_FILES_FOLDER} \
      --spring.datasource.username=postgres \
      --spring.datasource.password=${POSTGRES_PASSWORD} \
      --spring.datasource.url=jdbc:postgresql://${DATABASE_CONTAINER_NAME}/${POSTGRES_DATABASE_NAME_FOR_CONFIG_SERVER} \
      --spring.datasource.driver=org.postgresql.Driver \
      --spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect"]

  coatrack-admin:
    image: coatrack/coatrack-admin:${COATRACK_VERSION}
    container_name: ${ADMIN_CONTAINER_NAME}
    volumes:
      - ${GATEWAY_CONFIG_FILES_VOLUME}:${GATEWAY_CONFIG_FILES_FOLDER}
    depends_on:
      - ${DATABASE_CONTAINER_NAME}
    ports:
      - 8080:8080
    entrypoint: [ "sh", "-c", "sleep 5 && java -Djava.security.egd=file:/dev/./urandom -cp \
      /app/resources:/app/classes:/app/libs/* eu.coatrack.admin.YggAdminApplication \
      --spring.datasource.url=jdbc:postgresql://${DATABASE_CONTAINER_NAME}/${POSTGRES_DATABASE_NAME_FOR_WEB_APPLICATION} \
      --spring.datasource.username=postgres \
      --spring.datasource.password=${POSTGRES_PASSWORD} \
      --spring.jpa.hibernate.ddl-auto=update \
      --spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect \
      --spring.datasource.initialization-mode=always \
      --ygg.admin.database.insertSampleDataOnStartup=${INSERT_SAMPLE_DATA_ON_STARTUP} \
      --spring.cloud.config.uri=http://${CONFIG_SERVER_CONTAINER_NAME}:8998 \
      --spring.cloud.config.username=${CONFIG_SERVER_USERNAME} \
      --spring.cloud.config.password=${CONFIG_SERVER_PASSWORD} \
      --ygg.proxy.executable-jar.template.url=file://${JAR_DIR}/coatrack-proxy- \
      --ygg.admin.gateway.config.files.folder=${GATEWAY_CONFIG_FILES_FOLDER}"]

  coatrack-example-gateway:
    profiles:
      - example-gateway
    image: coatrack/coatrack-proxy:${COATRACK_VERSION}
    container_name: $EXAMPLE_GATEWAY_CONTAINER_NAME
    depends_on:
      - ${CONFIG_SERVER_CONTAINER_NAME}
      - ${ADMIN_CONTAINER_NAME}
    ports:
      - 8088:8088
    entrypoint: [ "sh", "-c", "sleep 5 && java -Djava.security.egd=file:/dev/./urandom -cp \
      /app/resources:/app/classes:/app/libs/* eu.coatrack.proxy.GatewayApplication \
          --ygg.admin.api-base-url=http://${ADMIN_CONTAINER_NAME}:8080/api/ \
          --spring.cloud.config.uri=http://${CONFIG_SERVER_CONTAINER_NAME}:8998"]

volumes:
  coatrack-database-volume:
    name: ${DATABASE_VOLUME}
  coatrack-gateway-config-files-volume:
    name: ${GATEWAY_CONFIG_FILES_VOLUME}